name: Firebase CI/CD Pipeline

on:
  push:
    branches: [ main, staging, development ]
  pull_request:
    branches: [ main, staging ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production
      validate_only:
        description: 'Validate only (no deployment)'
        required: false
        default: false
        type: boolean

jobs:
  validate:
    name: Validate Changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install validation dependencies
        run: |
          cd scripts/validation
          npm install
          
      - name: Run validation framework
        run: |
          cd scripts/validation
          node validate.js --all
          
      - name: Upload validation reports
        uses: actions/upload-artifact@v3
        with:
          name: validation-reports
          path: scripts/validation/reports/
          retention-days: 14

  build:
    name: Build Firebase Resources
    needs: validate
    runs-on: ubuntu-latest
    if: ${{ !inputs.validate_only }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Firebase Tools
        run: npm install -g firebase-tools
        
      - name: Install Functions dependencies
        run: |
          cd functions
          npm ci
          
      - name: Build Functions
        run: |
          cd functions
          npm run build
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: firebase-build
          path: |
            functions/lib
            functions/package.json
            firebase.json
            firestore.rules
            firestore.indexes.json
          retention-days: 7

  deploy-development:
    name: Deploy to Development
    needs: build
    if: ${{ (github.ref == 'refs/heads/development' || inputs.environment == 'development') && !inputs.validate_only }}
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: firebase-build
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Firebase Tools
        run: npm install -g firebase-tools
        
      - name: Deploy to Firebase Development
        run: firebase deploy --project db888-dev --only functions,firestore,storage
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          
      - name: Verify Deployment
        run: |
          echo "Verifying deployment..."
          firebase functions:list --project db888-dev
          
      - name: Update Deployment Status
        run: |
          echo "Development deployment completed at $(date)"
          echo "ENVIRONMENT=development" >> $GITHUB_ENV
          echo "DEPLOY_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV

  deploy-staging:
    name: Deploy to Staging
    needs: [build, deploy-development]
    if: ${{ (github.ref == 'refs/heads/staging' || inputs.environment == 'staging') && !inputs.validate_only }}
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: firebase-build
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Firebase Tools
        run: npm install -g firebase-tools
        
      - name: Deploy to Firebase Staging
        run: firebase deploy --project db888-staging --only functions,firestore,storage
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          
      - name: Run Integration Tests
        run: |
          cd scripts/deployment
          npm install
          npm run test:integration -- --env=staging
          
      - name: Update Deployment Status
        run: |
          echo "Staging deployment completed at $(date)"
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          echo "DEPLOY_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV

  deploy-production:
    name: Deploy to Production
    needs: [build, deploy-staging]
    if: ${{ (github.ref == 'refs/heads/main' || inputs.environment == 'production') && !inputs.validate_only }}
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: firebase-build
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Firebase Tools
        run: npm install -g firebase-tools
        
      - name: Create Backup Before Deployment
        run: |
          cd scripts/backup
          npm install
          node firebase-backup.js "Pre-deployment backup"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          
      - name: Validate Production Deployment
        run: |
          firebase functions:config:get --project db888
          firebase deploy --project db888 --only functions,firestore,storage --dry-run
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          
      - name: Deploy to Firebase Production
        run: firebase deploy --project db888 --only functions,firestore,storage
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          
      - name: Update Feature Flags
        run: |
          cd scripts/deployment
          npm install
          node update-feature-flags.js --env=production
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          
      - name: Update Deployment Status
        run: |
          echo "Production deployment completed at $(date)"
          echo "ENVIRONMENT=production" >> $GITHUB_ENV
          echo "DEPLOY_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV
