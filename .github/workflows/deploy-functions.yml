name: Deploy Firebase Functions

on:
  push:
    branches:
      - main
      - staging
    paths:
      - 'functions/**'
      - '.github/workflows/deploy-functions.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - development
          - staging
          - production
      functions:
        description: 'Specific functions to deploy (comma-separated, leave empty for all)'
        required: false
        type: string

jobs:
  deploy:
    name: Deploy Functions
    runs-on: ubuntu-latest
    
    # Git ref Í∏∞Î∞ò ÏûêÎèô ÌôòÍ≤Ω ÏÑ†ÌÉù
    env:
      DEPLOY_ENV: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'staging') }}
      FUNCTIONS_ONLY: ${{ github.event.inputs.functions || '' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json
      
      - name: Verify environment
        run: |
          echo "Deploying to ${{ env.DEPLOY_ENV }} environment"
          echo "Functions to deploy: ${{ env.FUNCTIONS_ONLY || 'All functions' }}"
      
      - name: Install dependencies
        working-directory: ./functions
        run: npm ci
      
      - name: Run tests
        working-directory: ./functions
        run: npm test
      
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      
      - name: Select Firebase project
        run: |
          if [ "${{ env.DEPLOY_ENV }}" = "production" ]; then
            firebase use db2-prod
          elif [ "${{ env.DEPLOY_ENV }}" = "staging" ]; then
            firebase use db2-staging
          else
            firebase use db2-dev
          fi
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      
      - name: Configure Firebase Functions with environment variables
        working-directory: ./functions
        run: |
          firebase functions:config:set \
            db.host="${{ secrets.DB_HOST }}" \
            db.user="${{ secrets.DB_USER }}" \
            db.password="${{ secrets.DB_PASSWORD }}" \
            db.name="${{ secrets.DB_NAME }}" \
            environment.node_env="${{ env.DEPLOY_ENV }}" \
            environment.region="asia-northeast3" \
            cache.enabled="true" \
            logging.level="${{ env.DEPLOY_ENV == 'production' && 'warn' || 'info' }}" \
            instances.min="${{ env.DEPLOY_ENV == 'production' && '1' || '0' }}"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      
      - name: Deploy Firebase Functions
        working-directory: ./functions
        run: |
          if [ -z "${{ env.FUNCTIONS_ONLY }}" ]; then
            firebase deploy --only functions --force
          else
            firebase deploy --only functions:${{ env.FUNCTIONS_ONLY }} --force
          fi
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      
      - name: Generate deployment info
        if: success()
        run: |
          TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
          GIT_HASH=$(git rev-parse --short HEAD)
          VERSION_TAG="${{ env.DEPLOY_ENV }}-${TIMESTAMP}-${GIT_HASH}"
          
          mkdir -p ./functions/deployments
          cat > ./functions/deployments/${VERSION_TAG}.json << EOL
          {
            "environment": "${{ env.DEPLOY_ENV }}",
            "version": "${VERSION_TAG}",
            "timestamp": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "functions": "${{ env.FUNCTIONS_ONLY || 'all' }}",
            "commitHash": "${GIT_HASH}",
            "actor": "${{ github.actor }}",
            "workflow": "${{ github.workflow }}"
          }
          EOL
          
          echo "Deployment recorded: ${VERSION_TAG}"
          
          # Î∞∞Ìè¨ ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏ (Ìñ•ÌõÑ Î°§Î∞± Ïãú ÏÇ¨Ïö©)
          echo "${VERSION_TAG}" > ./functions/deployments/latest-${DEPLOY_ENV}.txt
      
      - name: Notify deployment success
        if: success()
        run: |
          echo "üöÄ Successfully deployed Firebase Functions to ${{ env.DEPLOY_ENV }} environment"
      
      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Failed to deploy Firebase Functions to ${{ env.DEPLOY_ENV }} environment"
